// automatically generated by the FlatBuffers compiler, do not modify

package org.knime.flatbuffers.flatc;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Column extends Table {
  public static Column getRootAsColumn(ByteBuffer _bb) { return getRootAsColumn(_bb, new Column()); }
  public static Column getRootAsColumn(ByteBuffer _bb, Column obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Column __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int type() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public ByteColumn byteColumns() { return byteColumns(new ByteColumn()); }
  public ByteColumn byteColumns(ByteColumn obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public ByteCollectionColumn byteColColumns() { return byteColColumns(new ByteCollectionColumn()); }
  public ByteCollectionColumn byteColColumns(ByteCollectionColumn obj) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public BooleanColumn booleanColumns() { return booleanColumns(new BooleanColumn()); }
  public BooleanColumn booleanColumns(BooleanColumn obj) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public BooleanCollectionColumn booleanColColumns() { return booleanColColumns(new BooleanCollectionColumn()); }
  public BooleanCollectionColumn booleanColColumns(BooleanCollectionColumn obj) { int o = __offset(12); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public DoubleColumn doubleColumns() { return doubleColumns(new DoubleColumn()); }
  public DoubleColumn doubleColumns(DoubleColumn obj) { int o = __offset(14); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public DoubleCollectionColumn doubleColColumns() { return doubleColColumns(new DoubleCollectionColumn()); }
  public DoubleCollectionColumn doubleColColumns(DoubleCollectionColumn obj) { int o = __offset(16); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public IntColumn intColumns() { return intColumns(new IntColumn()); }
  public IntColumn intColumns(IntColumn obj) { int o = __offset(18); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public IntCollectionColumn intColColumns() { return intColColumns(new IntCollectionColumn()); }
  public IntCollectionColumn intColColumns(IntCollectionColumn obj) { int o = __offset(20); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public LongColumn longColumns() { return longColumns(new LongColumn()); }
  public LongColumn longColumns(LongColumn obj) { int o = __offset(22); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public LongCollectionColumn longColColumns() { return longColColumns(new LongCollectionColumn()); }
  public LongCollectionColumn longColColumns(LongCollectionColumn obj) { int o = __offset(24); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public StringColumn stringColumns() { return stringColumns(new StringColumn()); }
  public StringColumn stringColumns(StringColumn obj) { int o = __offset(26); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public StringCollectionColumn stringColColumns() { return stringColColumns(new StringCollectionColumn()); }
  public StringCollectionColumn stringColColumns(StringCollectionColumn obj) { int o = __offset(28); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createColumn(FlatBufferBuilder builder,
      int type,
      int byteColumnsOffset,
      int byteColColumnsOffset,
      int booleanColumnsOffset,
      int booleanColColumnsOffset,
      int doubleColumnsOffset,
      int doubleColColumnsOffset,
      int intColumnsOffset,
      int intColColumnsOffset,
      int longColumnsOffset,
      int longColColumnsOffset,
      int stringColumnsOffset,
      int stringColColumnsOffset) {
    builder.startObject(13);
    Column.addStringColColumns(builder, stringColColumnsOffset);
    Column.addStringColumns(builder, stringColumnsOffset);
    Column.addLongColColumns(builder, longColColumnsOffset);
    Column.addLongColumns(builder, longColumnsOffset);
    Column.addIntColColumns(builder, intColColumnsOffset);
    Column.addIntColumns(builder, intColumnsOffset);
    Column.addDoubleColColumns(builder, doubleColColumnsOffset);
    Column.addDoubleColumns(builder, doubleColumnsOffset);
    Column.addBooleanColColumns(builder, booleanColColumnsOffset);
    Column.addBooleanColumns(builder, booleanColumnsOffset);
    Column.addByteColColumns(builder, byteColColumnsOffset);
    Column.addByteColumns(builder, byteColumnsOffset);
    Column.addType(builder, type);
    return Column.endColumn(builder);
  }

  public static void startColumn(FlatBufferBuilder builder) { builder.startObject(13); }
  public static void addType(FlatBufferBuilder builder, int type) { builder.addInt(0, type, 0); }
  public static void addByteColumns(FlatBufferBuilder builder, int byteColumnsOffset) { builder.addOffset(1, byteColumnsOffset, 0); }
  public static void addByteColColumns(FlatBufferBuilder builder, int byteColColumnsOffset) { builder.addOffset(2, byteColColumnsOffset, 0); }
  public static void addBooleanColumns(FlatBufferBuilder builder, int booleanColumnsOffset) { builder.addOffset(3, booleanColumnsOffset, 0); }
  public static void addBooleanColColumns(FlatBufferBuilder builder, int booleanColColumnsOffset) { builder.addOffset(4, booleanColColumnsOffset, 0); }
  public static void addDoubleColumns(FlatBufferBuilder builder, int doubleColumnsOffset) { builder.addOffset(5, doubleColumnsOffset, 0); }
  public static void addDoubleColColumns(FlatBufferBuilder builder, int doubleColColumnsOffset) { builder.addOffset(6, doubleColColumnsOffset, 0); }
  public static void addIntColumns(FlatBufferBuilder builder, int intColumnsOffset) { builder.addOffset(7, intColumnsOffset, 0); }
  public static void addIntColColumns(FlatBufferBuilder builder, int intColColumnsOffset) { builder.addOffset(8, intColColumnsOffset, 0); }
  public static void addLongColumns(FlatBufferBuilder builder, int longColumnsOffset) { builder.addOffset(9, longColumnsOffset, 0); }
  public static void addLongColColumns(FlatBufferBuilder builder, int longColColumnsOffset) { builder.addOffset(10, longColColumnsOffset, 0); }
  public static void addStringColumns(FlatBufferBuilder builder, int stringColumnsOffset) { builder.addOffset(11, stringColumnsOffset, 0); }
  public static void addStringColColumns(FlatBufferBuilder builder, int stringColColumnsOffset) { builder.addOffset(12, stringColColumnsOffset, 0); }
  public static int endColumn(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

