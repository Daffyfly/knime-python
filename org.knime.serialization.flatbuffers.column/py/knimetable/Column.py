# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flatc

import flatbuffers

class Column(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsColumn(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Column()
        x.Init(buf, n + offset)
        return x

    # Column
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Column
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Column
    def ByteColumns(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .ByteColumn import ByteColumn
            obj = ByteColumn()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Column
    def ByteColColumns(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .ByteCollectionColumn import ByteCollectionColumn
            obj = ByteCollectionColumn()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Column
    def BooleanColumns(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .BooleanColumn import BooleanColumn
            obj = BooleanColumn()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Column
    def BooleanColColumns(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .BooleanCollectionColumn import BooleanCollectionColumn
            obj = BooleanCollectionColumn()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Column
    def DoubleColumns(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .DoubleColumn import DoubleColumn
            obj = DoubleColumn()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Column
    def DoubleColColumns(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .DoubleCollectionColumn import DoubleCollectionColumn
            obj = DoubleCollectionColumn()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Column
    def IntColumns(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .IntColumn import IntColumn
            obj = IntColumn()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Column
    def IntColColumns(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .IntCollectionColumn import IntCollectionColumn
            obj = IntCollectionColumn()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Column
    def LongColumns(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .LongColumn import LongColumn
            obj = LongColumn()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Column
    def LongColColumns(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .LongCollectionColumn import LongCollectionColumn
            obj = LongCollectionColumn()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Column
    def StringColumns(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .StringColumn import StringColumn
            obj = StringColumn()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Column
    def StringColColumns(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .StringCollectionColumn import StringCollectionColumn
            obj = StringCollectionColumn()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def ColumnStart(builder): builder.StartObject(13)
def ColumnAddType(builder, type): builder.PrependInt32Slot(0, type, 0)
def ColumnAddByteColumns(builder, byteColumns): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(byteColumns), 0)
def ColumnAddByteColColumns(builder, byteColColumns): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(byteColColumns), 0)
def ColumnAddBooleanColumns(builder, booleanColumns): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(booleanColumns), 0)
def ColumnAddBooleanColColumns(builder, booleanColColumns): builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(booleanColColumns), 0)
def ColumnAddDoubleColumns(builder, doubleColumns): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(doubleColumns), 0)
def ColumnAddDoubleColColumns(builder, doubleColColumns): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(doubleColColumns), 0)
def ColumnAddIntColumns(builder, intColumns): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(intColumns), 0)
def ColumnAddIntColColumns(builder, intColColumns): builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(intColColumns), 0)
def ColumnAddLongColumns(builder, longColumns): builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(longColumns), 0)
def ColumnAddLongColColumns(builder, longColColumns): builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(longColColumns), 0)
def ColumnAddStringColumns(builder, stringColumns): builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(stringColumns), 0)
def ColumnAddStringColColumns(builder, stringColColumns): builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(stringColColumns), 0)
def ColumnEnd(builder): return builder.EndObject()
